/*! angular-progress-arc - v1.0.0 (http://github.com/markgarrigan/angular-progress-arc) */
!function(a){"use strict";var b=a.module("angular-progress-arc",[]);b.provider("progressArcDefaults",function(){var b={strokeWidth:10,stroke:"black",lineCap:"butt",background:null};this.setDefault=function(a,c){return b[a]=c,this},this.$get=function(){return function(c){a.forEach(b,function(a,b){c[b]||(c[b]=a)})}}}),b.directive("progressArc",["progressArcDefaults",function(a){return{restrict:"E",transclude:!0,scope:{strokeWidth:"@",linecap:"@",stroke:"@",complete:"@",background:"@"},compile:function(b,c){var d=b.find("svg").eq(0);return d.css({display:"block",transform:"rotate(-90deg)"}),b.css({display:"block"}),a(c),function(a,b,c){var d=function(){a.radius=100-a.strokeWidth/2,a.circumference=2*Math.PI*a.radius};a.$watchCollection("[strokeWidth]",d),d()}},template:'<svg viewBox="0 0 200 200" preserveAspectRatio="none"><circle fill="none" ng-if="background" cx="100" cy="100" ng-attr-r="{{radius}}" ng-attr-stroke="{{background}}" ng-attr-stroke-width="{{strokeWidth}}"/><circle fill="none" cx="100" cy="100" ng-attr-r="{{radius}}" ng-attr-stroke="{{stroke}}" ng-attr-stroke-width="{{strokeWidth}}"ng-attr-stroke-dasharray="{{circumference}}"ng-attr-stroke-dashoffset="{{(1 - complete) * circumference}}"ng-attr-stroke-linecap="{{linecap}}"/></svg><ng-transclude></ng-transclude>'}}])}(window.angular);